[DEFAULT]
# WARNING: *THE LINE BELOW MUST BE FALSE ON A PRODUCTION ENVIRONMENT*
debug = false

# ERROR REPORTING BY EMAIL
# Uncomment to enable email error reporting, you probably want this
# on production to receive application crashes by email
#trace_errors.error_email = you@yourdomain.com
trace_errors.from_address = turbogears@localhost
trace_errors.smtp_server = localhost

# Uncomment if email server requires authentication
#trace_errors.smtp_use_tls = true
#trace_errors.smtp_username = unknown
#trace_errors.smtp_password = unknown

# Uncomment to enable additional context data for email error reporting
#trace_errors.dump_request = true
#trace_errors.dump_local_frames = true

# REPORT SLOW REQUESTS
#trace_slowreqs.enable = true
#trace_slowreqs.interval = 25
#trace_slowreqs.exclude = /tw2/resources

[server:main]
use = egg:gearbox#wsgiref
host = 127.0.0.1
port = 8080

[app:main]
use = egg:workbox

# Default application language, when available this will be
# used when none of the browser requested languages is available.
#i18n.lang = en

cache_dir = %(here)s/data
session.key = workbox
session.secret = 560dde83-ec73-4b41-bc62-9b8c20140daf
session.type = cookie
session.validate_key = 560dde83-ec73-4b41-bc62-9b8c20140daf

# If you'd like to fine-tune the individual locations of the cache data dirs
# un-comment the desired settings here:
#cache.data_dir = %(here)s/data/cache

auto_reload_templates = false

# Turn off static files serving from public/ directory
# this can be a speed boost if you have a proxy server already
# serving them for you.
#serve_static = false

#turn this setting to "min" if you would like tw to produce minified
#javascript files (if your library supports that)
toscawidgets.framework.resource_variant = debug

# pick the form for your database
ming.url = mongodb://localhost:27017/
ming.db = workbox

# This line ensures that Genshi will render xhtml when sending the
# output. Change to html or xml, as desired.
templating.genshi.method = xhtml
templating.genshi.doctype = html5

# the compiled template dir is a directory that must be readable and writable
# by your webserver. It will be used to store the resulting templates once
# compiled by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security
# reasons.  If disabled, None, False, or not writable, it will fall back
# to an in-memory cache.
templating.mako.compiled_templates_dir = %(here)s/data/templates

# base workbox vagrantfiles folder
workbox.vagrantfiles.basefolder = /tmp/workbox/

# server hostname
workbox.hostname = localhost

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html
[loggers]
keys = root, workbox, auth

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_workbox]
level = DEBUG
handlers =
qualname = workbox

# A logger for authentication, identification and authorization
# this is repoze.who:
[logger_auth]
level = WARN
handlers =
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
